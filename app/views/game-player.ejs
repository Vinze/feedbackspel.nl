<!DOCTYPE html>
<html lang="nl">
<head>
	<% include includes/head %>
</head>
<body class="ingame client">
<% include includes/sidebar %>
<div class="site-wrapper" id="content">
	<!-- Users will be rendered here -->
</div>
<% include includes/scripts %>
<script type="text/javascript" src="/socket.io/socket.io.js"></script>

<script type="text/template" id="template">
	<a href="/dashboard" title="Spel verlaten" class="exit-button" on-click="leave">
		<i class="fa fa-fw fa-sign-out"></i>
	</a>
	<div class="content container">

		{{#if step == 1}}
			<div class="player-select">
				{{#if players.length > 1}}
					<h1>{{card}}:</h1>
					<ul class="players">
						{{#each players}}
							{{#if (_id != userId)}}
								<li>
									<div class="avatar"><img src="/avatar/{{_id}}.png"></div>
									<div class="name">{{firstname}} {{lastname}}</div>
									<div class="rating">
										<a href="#" on-tap="setRating:1">
											<i class="fa fa-star{{rating[_id] >= 1 ? '' : '-o'}}"></i>
										</a>
										<a href="#" on-tap="setRating:2">
											<i class="fa fa-star{{rating[_id] >= 2 ? '' : '-o'}}"></i>
										</a>
										<a href="#" on-tap="setRating:3">
											<i class="fa fa-star{{rating[_id] >= 3 ? '' : '-o'}}"></i>
										</a>
										<a href="#" on-tap="setRating:4">
											<i class="fa fa-star{{rating[_id] >= 4 ? '' : '-o'}}"></i>
										</a>
										<a href="#" on-tap="setRating:5">
											<i class="fa fa-star{{rating[_id] >= 5 ? '' : '-o'}}"></i>
										</a>
									</div>
								</li>
							{{/if}}
						{{/each}}
					</ul>
					<div class="actions">
						<a href="#" class="btn confirm" on-click="ready"><i class="fa fa-check"></i> Ik ben klaar</a>
					</div>
				{{/if}}
			</div>
		{{/if}}

		{{#if step == 2}}
			<div class="waiting">
				<h1>Feedback verzonden!</h1>
				<p><strong>{{playersReady}}</strong> van de <strong>{{players.length}}</strong> spelers zijn klaar.. <i class="fa fa-spin fa-spinner"></i> </p>
			</div>
		{{/if}}

		{{#if step == 3}}
			<div class="results">
				<h1>Ontvangen feedback:</h1>
				<ul>
					{{#each results}}
						<li>
							<div class="avatar"><img src="/avatar/{{from._id}}.png"></div>
							<div class="from">Van <strong>{{from.firstname}}</strong> kreeg je:</div>
							<div class="rating">
								<i class="fa fa-star{{rating >= 1 ? '' : '-o'}}"></i>
								<i class="fa fa-star{{rating >= 2 ? '' : '-o'}}"></i>
								<i class="fa fa-star{{rating >= 3 ? '' : '-o'}}"></i>
								<i class="fa fa-star{{rating >= 4 ? '' : '-o'}}"></i>
								<i class="fa fa-star{{rating >= 5 ? '' : '-o'}}"></i>
							</div>
						</li>
					{{/each}}
				</ul>
			</div>
		{{/if}}
	</div>

</script>

<script type="text/javascript">

	var userId = "<%= user._id %>";
	var token  = Cookies.get('fbs_token');
	var url    = 'http://' + window.location.hostname + ':1337';

	function verifyConnection(callback) {
		var socket;
		if (socket && socket.connected) {
			callback(socket);
		} else {
			socket = io(url, { query: 'token=' + token + '&role=player' });
			callback(socket);
		}
	}

	var Player = new Ractive({
		el: 'content',
		template: '#template',
		data: {
			step: null, // 1 = set feedback // 2 = waiting // 3 = show results
			card: '',
			players: [],
			playersReady: 0,
			userId: userId,
			rating: {},
			results: {}
		}
	});

	Player.on({
		ready: function(evt) {
			var rating = Player.get('rating');
			verifyConnection(function(socket) {
				socket.emit('player.ready', rating);
			});
			evt.original.preventDefault();
		},
		setRating: function(evt, rating) {
			verifyConnection(function(socket) {
				Player.set('rating.' + evt.context._id, rating);
			});
			evt.original.preventDefault();
		},
		leave: function(evt) {
			verifyConnection(function(socket) {
				socket.emit('player.remove');
				window.location = '/dashboard';
			});
			evt.original.preventDefault();
		}
	});

	verifyConnection(function(socket) {
		socket.on('round.next', function(state) {
			console.log('next round!!');
			Player.set('step', 1);
			Player.set('rating', {});
			Player.set('players', state.players);
			Player.set('card', state.card);
		});

		socket.on('gamestate', function(state) {
			Player.set('players', state.players);
			Player.set('card', state.card);
			Player.set('playersReady', state.playersReady);

			var currentPlayer = _.find(state.players, function(player) {
				return player._id == userId;
			});

			var step = currentPlayer ? currentPlayer.step : 1;

			if (state.players.length >= 1 && state.players.length == state.playersReady) {
				Player.set('step', 3);
				Player.set('results', currentPlayer.ratings);
			} else {
				Player.set('step', step);
			}
		});
	});

</script>
</body>
</html>