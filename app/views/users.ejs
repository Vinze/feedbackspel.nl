<!DOCTYPE html>
<html lang="nl">
<head>
	<% include includes/head %>
</head>
<body class="users">
<% include includes/top %>
<div class="content-wrapper">
	<div class="content container" id="content">
		<!-- Content will be rendered here -->
	</div>
</div>
<% include includes/bottom %>
<script type="text/template" id="template">
	{{#if message}}
		<div class="flash-success" intro-outro="slide">
			{{message}}
		</div>
	{{/if}}
	<table>
		<thead>
			<tr>
				<th>Email</th>
				<th>Firstname</th>
				<th>Lastname</th>
				<th class="align-center">Admin</th>
				<th class="align-center">Avatar</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			{{#each users}}
				<tr>
					<td>
						<input type="text" class="text" value="{{email}}" on-change="save:{{this}}">
					</td>
					<td style="width: 180px">
						<input type="text" class="text" value="{{firstname}}" on-change="save:{{this}}">
					</td>
					<td style="width: 180px">
						<input type="text" class="text" value="{{lastname}}" on-change="save:{{this}}">
					</td>
					<td style="width: 75px" class="align-center">
						<input type="checkbox" checked="{{admin}}" class="checkbox" on-click="save:{{this}}">
					</td>
					<td style="width: 75px" class="align-center">
						<input type="checkbox" checked="{{image}}" class="checkbox" on-click="save:{{this}}">
					</td>
					<td style="width: 130px" class="align-right small">
						<a class="text-red" on-click="remove:{{this}}">Delete user</a><br>
						{{updated_at}}
					</td>
				</tr>
			{{/each}}
		</tbody>
	</table>
</script>

<script type="text/javascript" src="/js/libs/moment.min.js"></script>
<script type="text/javascript" src="/js/libs/sweet-alert.min.js"></script>
<script type="text/javascript">
	var UserList = new Ractive({
		el: 'content',
		template: '#template',
		data: { users: [], message: null }
	});
	UserList.on({
		save: function(evt, user) {
			$.post('/api/users/save', user, function(res) {
				UserList.set('message', 'De gebruiker is gewijzigd!');
				setTimeout(function() {
					UserList.set('message', null);
				}, 2500);
				UserList.set(evt.keypath + '.updated_at', moment().format('YYYY-MM-DD HH:mm:ss'));
			});
		},
		remove: function(evt, user) {
			swal({
				title: 'Gebruiker verwijderen?',
				text: 'Let op, deze actie kan niet ongedaan gedaan worden!',
				showCancelButton: true,
				cancelButtonText: 'Annuleren',
				confirmButtonColor: '#DD5755',
				confirmButtonText: 'Verwijderen',
				closeOnConfirm: false,
				allowOutsideClick: true
			}, function() {
				$.post('/api/users/delete', user, function(res) {
					swal({
						title: 'Verwijderd!',
						text: 'De gebruiker is succesvol verwijderd.',
						type: 'success',
						timer: 1500
					});
					var index = UserList.get('users').indexOf(user);
					UserList.splice('users', index, 1);
				});
			});
		}
	});
	$.getJSON('/api/users', function(users) {
		UserList.set('users', users);
		// console.log(users);
	});
</script>
</body>
</html>